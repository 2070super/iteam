; generated by ARM/Thumb C/C++ Compiler with , RVCT3.1 [Build 919] for uVision
; commandline ArmCC [--debug -c --asm --interleave -omain.o --depend=main.d --device=DARMP --apcs=interwork -O0 -IC:\Keil\ARM\INC\Philips --omf_browse=main.crf main.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Delayms PROC
;;;11     
;;;12        for(; dly>0; dly--)
000000  ea000006          B        |L1.32|
                  |L1.4|
;;;13           for(i=0; i<9000; i++);
000004  e3a01000          MOV      r1,#0
000008  ea000000          B        |L1.16|
                  |L1.12|
00000c  e2811001          ADD      r1,r1,#1
                  |L1.16|
000010  e59f218c          LDR      r2,|L1.420|
000014  e1510002          CMP      r1,r2
000018  3afffffb          BCC      |L1.12|
00001c  e2400001          SUB      r0,r0,#1              ;12
                  |L1.32|
000020  e3500000          CMP      r0,#0                 ;12
000024  1afffff6          BNE      |L1.4|
;;;14     }
000028  e12fff1e          BX       lr
;;;15     /****************************************************************************
                          ENDP

                  MSpiIni PROC
;;;22     {
;;;23        S0PCCR = 0x52;			// 设置SPI时钟分频
00002c  e3a00052          MOV      r0,#0x52
000030  e59f1170          LDR      r1,|L1.424|
000034  e5c1000c          STRB     r0,[r1,#0xc]
;;;24        S0PCR = 0x30;		    // 设置SPI接口模式，MSTR=1，CPOL=1，CPHA=0，LSBF=0
000038  e3a00030          MOV      r0,#0x30
00003c  e5c10000          STRB     r0,[r1,#0]
;;;25     }
000040  e12fff1e          BX       lr
;;;26     
                          ENDP

                  MSendData PROC
;;;34     uint8  MSendData(uint8 data)
;;;35     {  IO0CLR = HC595_CS;			    // 片选
000044  e1a01000          MOV      r1,r0
000048  e3a00202          MOV      r0,#0x20000000
00004c  e59f2158          LDR      r2,|L1.428|
000050  e582000c          STR      r0,[r2,#0xc]
;;;36        
;;;37        S0PDR = data;
000054  e0600640          RSB      r0,r0,r0,ASR #12
000058  e5c01008          STRB     r1,[r0,#8]
;;;38        while( 0==(S0PSR&0x80) );		// 等待SPIF置位，即等待数据发送完毕
00005c  e1a00000          MOV      r0,r0
                  |L1.96|
000060  e59f0140          LDR      r0,|L1.424|
000064  e5d00004          LDRB     r0,[r0,#4]
000068  e3100080          TST      r0,#0x80
00006c  0afffffb          BEQ      |L1.96|
;;;39        
;;;40        IO0SET = HC595_CS;
000070  e3a00202          MOV      r0,#0x20000000
000074  e59f2130          LDR      r2,|L1.428|
000078  e5820004          STR      r0,[r2,#4]
;;;41        return(S0PDR);
00007c  e0600640          RSB      r0,r0,r0,ASR #12
000080  e5d00008          LDRB     r0,[r0,#8]
;;;42     }
000084  e12fff1e          BX       lr
;;;43     
                          ENDP

                  main PROC
;;;54     int  main(void)
;;;55     {
000088  e92d4070          PUSH     {r4-r6,lr}
;;;56        uint32  i = 0;
00008c  e3a04000          MOV      r4,#0
;;;57        
;;;58        PINSEL0 = 0x00001500;			// 设置SPI管脚连接
000090  e3a00c15          MOV      r0,#0x1500
000094  e59f1114          LDR      r1,|L1.432|
000098  e5810000          STR      r0,[r1,#0]
;;;59        PINSEL1 = 0x00000000;
00009c  e3a00000          MOV      r0,#0
0000a0  e5810004          STR      r0,[r1,#4]
;;;60        IO0DIR = HC595_CS;				// 设置LED0控制口为输出
0000a4  e3a00202          MOV      r0,#0x20000000
0000a8  e1c117c0          BIC      r1,r1,r0,ASR #15
0000ac  e5810008          STR      r0,[r1,#8]
;;;61        MSpiIni();					// 初始化SPI接口
0000b0  ebfffffe          BL       MSpiIni
;;;62        while(1)	
0000b4  ea000039          B        |L1.416|
                  |L1.184|
;;;63        {
;;;64         /*因为数码管为共阳，表为共阴数据，所以需取反*/
;;;65           rcv_data = MSendData(~DISP_TAB[i % 10]);	     //  发送显示数据，
0000b8  e3a0100a          MOV      r1,#0xa
0000bc  e1a00004          MOV      r0,r4
0000c0  ebfffffe          BL       __aeabi_uidivmod
0000c4  e59f00e8          LDR      r0,|L1.436|
0000c8  e7d00001          LDRB     r0,[r0,r1]
0000cc  e1e00000          MVN      r0,r0
0000d0  e20050ff          AND      r5,r0,#0xff
0000d4  e1a00005          MOV      r0,r5
0000d8  ebfffffe          BL       MSendData
0000dc  e59f10d4          LDR      r1,|L1.440|
0000e0  e5c10000          STRB     r0,[r1,#0]  ; rcv_data
;;;66           rcv_data = MSendData(~DISP_TAB[i % 100 / 10]);	//  发送显示数据
0000e4  e3a01064          MOV      r1,#0x64
0000e8  e1a00004          MOV      r0,r4
0000ec  ebfffffe          BL       __aeabi_uidivmod
0000f0  e1a06001          MOV      r6,r1
0000f4  e3a0100a          MOV      r1,#0xa
0000f8  e1a00006          MOV      r0,r6
0000fc  ebfffffe          BL       __aeabi_uidivmod
000100  e59f10ac          LDR      r1,|L1.436|
000104  e7d10000          LDRB     r0,[r1,r0]
000108  e1e00000          MVN      r0,r0
00010c  e20050ff          AND      r5,r0,#0xff
000110  e1a00005          MOV      r0,r5
000114  ebfffffe          BL       MSendData
000118  e59f1098          LDR      r1,|L1.440|
00011c  e5c10000          STRB     r0,[r1,#0]  ; rcv_data
;;;67           rcv_data = MSendData(~DISP_TAB[i % 1000 / 100]);	//  发送显示数据
000120  e3a01ffa          MOV      r1,#0x3e8
000124  e1a00004          MOV      r0,r4
000128  ebfffffe          BL       __aeabi_uidivmod
00012c  e1a06001          MOV      r6,r1
000130  e3a01064          MOV      r1,#0x64
000134  e1a00006          MOV      r0,r6
000138  ebfffffe          BL       __aeabi_uidivmod
00013c  e59f1070          LDR      r1,|L1.436|
000140  e7d10000          LDRB     r0,[r1,r0]
000144  e1e00000          MVN      r0,r0
000148  e20050ff          AND      r5,r0,#0xff
00014c  e1a00005          MOV      r0,r5
000150  ebfffffe          BL       MSendData
000154  e59f105c          LDR      r1,|L1.440|
000158  e5c10000          STRB     r0,[r1,#0]  ; rcv_data
;;;68           rcv_data = MSendData(~DISP_TAB[i / 1000 % 10]);	//  发送显示数据
00015c  e3a01ffa          MOV      r1,#0x3e8
000160  e1a00004          MOV      r0,r4
000164  ebfffffe          BL       __aeabi_uidivmod
000168  e1a06000          MOV      r6,r0
00016c  e3a0100a          MOV      r1,#0xa
000170  ebfffffe          BL       __aeabi_uidivmod
000174  e59f0038          LDR      r0,|L1.436|
000178  e7d00001          LDRB     r0,[r0,r1]
00017c  e1e00000          MVN      r0,r0
000180  e20050ff          AND      r5,r0,#0xff
000184  e1a00005          MOV      r0,r5
000188  ebfffffe          BL       MSendData
00018c  e59f1024          LDR      r1,|L1.440|
000190  e5c10000          STRB     r0,[r1,#0]  ; rcv_data
;;;69           i++;
000194  e2844001          ADD      r4,r4,#1
;;;70           Delayms(100);		
000198  e3a00064          MOV      r0,#0x64
00019c  ebfffffe          BL       Delayms
                  |L1.416|
0001a0  eaffffc4          B        |L1.184|
;;;71        }
;;;72      }
                          ENDP

                  |L1.420|
0001a4  00002328          DCD      0x00002328
                  |L1.424|
0001a8  e0020000          DCD      0xe0020000
                  |L1.428|
0001ac  e0028000          DCD      0xe0028000
                  |L1.432|
0001b0  e002c000          DCD      0xe002c000
                  |L1.436|
0001b4  00000000          DCD      DISP_TAB
                  |L1.440|
0001b8  00000000          DCD      rcv_data

                          AREA ||.data||, DATA, ALIGN=0

                  rcv_data
000000  00                DCB      0x00

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  DISP_TAB
000000  c0f9a4b0          DCB      0xc0,0xf9,0xa4,0xb0
000004  999282f8          DCB      0x99,0x92,0x82,0xf8
000008  80908883          DCB      0x80,0x90,0x88,0x83
00000c  c6a1868e          DCB      0xc6,0xa1,0x86,0x8e

                  __ARM_use_no_argv EQU 0
